---
layout: post
title: "일방향 해시함수"
subtitle: "현대 암호"
categories: devlog
tags: security
---

## `무결성`
데이터가 변경이 되지 않도록 하는 성질을 `무결성`, 혹은 `완전성`이라고 한다. 어제의 데이터 A와 오늘의 데이터 A가 동일하다는 것을 확인하는 가장 좋은 방법은 어제의 데이터를 안전한 장소에 백업해두고, 오늘의 데이터와 백업된 데이터를 비교함으로 무결성을 증명하는 방법이다. 그러나 매 순간 모든 파일을 비교하는 것은 용량이 크므로 비효율적이다. 그래서 변경점만을 비교하는 방식을 사용한다. git과 같은 방법도 있겠지만, 여기에서는 일방향 해시함수를 사용해 해시값을 만들고, 해시값의 비교를 통해 데이터의 무결성을 검증한다.

### 일방향 해시 함수
`메시지 요약 함수` `암호학적 해시 함수` `Message digest function` 등으로도 불린다.  
무결성을 점검하기 위해 메시지를 축약하는 함수이다.   
`해시 함수`는 `메시지`를 입력받아면 `해시값`을 출력한다.   

### 일방향 해시 함수의 요구사항  
#### 압축   
가변적인 입력값을 20byte의 고정된 출력값으로 만들어낸다.   

#### 계산의 용이성   
해시값의 계산은 매우 빠르다. 

#### 일방향성   
메시지을 해시값으로 계산이 가능하지만, 해시값을 메시지로는 계산이 불가능하다.    
> 비밀번호는 해시값으로 저장해놓으므로, 비밀번호를 비교해서 로그인할 수는 있지만, 비밀번호를 알아낼 수는 없다.   
> 
> 비밀번호를 잊어버린 경우, 임시 비밀번호를 줌으로써 다른 비밀번호를 등록하도록 한다.

#### 충돌 회피성   
충돌을 발견하는 것이 어려운 성질을 의미한다.   
메시지가 1bit만 달라져도 전혀 다른 해시값이 생성된다.   
하나의 해시값을 만들어내는 2개의 다른 메시지가 최대한 없도록 만들어야한다.    
동일한 해시값을 가지는 메시지가 있더라도 충돌을 발견하기는 어려워야한다.   
즉 메시지 `A`와 메시지 `B`가 동일한 해시값을 만들어내더라도 `A`를 통해 `B`를 알아낼 수 없어야한다.   

> `충돌(Collision)`   
> 2개의 다른 메시지가 같은 해시값을 갖는 것   
> 입력값의 길이는 무제한이지만, 출력값은 20byte이므로 충돌이 반드시 발생한다.   
> 일방향 해시 함수를 무결성 확인에 사용하기 위해서는 충돌이 발견되어서는 안 된다.

---

## 해시함수의 종류
- MD(Message Digest)
- SHA(Secure Hash Algorithm)

---

## 해시함수의 사용처
- 무결성 확인
- 전자서명
- 패스워드 안전 보관
- 소프트웨어 다운로드 받을 때(미러 사이트)

