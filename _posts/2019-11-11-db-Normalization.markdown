---
layout: post
title: "정규화"
subtitle: "Today I Learn"
categories: devlog
tags: db
---

## 정규화
- ERD 내에서 중복요소를 제거해 나가는 과정이다.
- 중복을 제거하기 위해 엔티티를 여러 개로 분리하는 과정이다.
- 엔티티를 분리할 때 관계를 맺으면서 분리해야 한다.

## 제 1 정규화
하나의 속성에는 하나의 값(atomic value)이 들어가야한다. 하나의 속성이 복수개의 값을 가질 때 하나의 속성에 여러 개의 값을 한번에 넣을 시 이후 검색이 불편해진다. 같은 속성을 여러개로 나누면(속성1, 속성2), 역시 검색이 불편해진다. 이런 것들이 제 1 정규화 대상이다.   
예를 들어 사람들의 취미를 조사한다면 취미까지를 `PK`로 선언해 복수개의 값을 넣을 수 있도록 한다.  

| 회원  | 취미  |
| --- | --- |
| P1  | 등산  |
| P1  | 테니스 |
| P2  | 낚시  |

> 속성 값이 null 없이 반복 속성의 경우 분리한다.

## 제 2 정규화
함수 종속 다이어그램을 지키지 않고, 어떤 속성이 PK가 아닌 일부 속성에 종속되어 있을 때에는 또 하나의 테이블로 분리한다.

> 복합키의 부분키만에 의해 속성이 결정되는 경우 연관된 부분키와 속성을 분리한다.

#### `함수 종속 다이어그램`
PK로 속성을 검색하면 하나의 값만 나온다.


## 제 3 정규화 `이행종속 제거`
주식별자각 아닌 속성들 중에서 종속관계에 있는 속성을 찾아 제거한다.   
`삽입 이상`, `삭제 이상`, `갱신 이상`이 발생할 경우 테이블을 분리한다.  

> 키가 아닌 속성이 다른 속성을 결정하는 경우 분리한다.  

---

## 정규화가 필요 없는 설계 기법
1. 장부나 전표에서 머리부(header)와 서술부(detail)는 별도의 엔티티에 저장한다. `제 1 정규화 방지`
2. 코드-코드 값의 관계에 있는 속성(엔티티에 포함된 종속관계)들은 별도의 엔티티로 구성한다. `제 2, 3 정규화 방지`













