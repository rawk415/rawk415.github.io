---
layout: post
title: "공개키 암호"
subtitle: "현대 암호"
categories: devlog
tags: security
---
## 대칭암호의 문제점
- 많은 키를 보관해야 한다. (통신하는 인원만큼의 키가 필요하다.)
- 모르는 사람과의 신뢰성 있는 통신이 어렵다. 
- 당사자들끼리 키를 나눠가지고 있어야한다.
이 중 당사자들끼리 `키를 안전하게 나누어 갖는 것`이 가장 까다롭다.

## 키를 안전하게 나누어 갖는 방법
#### 사전에 공유하기  
  - 안전한 방법으로 키를 사전에 건네주는 방법
  - 항상 사전에 키를 나누어 가져야한다는 단점이 있다.
   
#### 키 배포 센터 두기
  - 신뢰할 수 있는 기관을 두어 암호화 할 때 키를 만들어서 전달한다.
  - 중앙 집중형이여서 보안상(서버 다운, 신뢰도) 위험할 수 있다.
   
#### Diffie-Hellman 키 교환
  1. 송수신자가 각각 비밀 값(`A, B`)을 만들고, 모두가 볼 수 있는 공개 값(`C`)을 만든다.
  2. 비밀 값(`A, B`)과 공개 값(`C`)을 결합한 후, 상대방에게 전달한다.(`AC, BC`)
  3. 상대방에게 받은 결합 값(`AC, BC`)에 자신의 비밀 값(`B, A`)을 결합한다.(`ACB, BCA`)
  4. 도청자가 가진 값만으로는(`C, AC, BC`) 올바른 키(`ABC`)를 만들 수 없다.

<br><br><br>

# 공개키 암호(비대칭 암호)
암호화 할때의 `암호화 키`와 복호화 할 때의 `복호화 키`가 다른 암호화 방식.

## 키 쌍(Key Pair)
암호화 키와 복호화 키가 반드시 쌍으로 존재한다.  
암호화 키를 이용해 복호화 키를 만들 수 없다.  
키 쌍을 이루는 2개의 키는 수학적으로 밀접한 관계에 있다.  

## 암호화 키
암호화를 위해 송신자가 사용하는 키. 공개되는 키이다.
`공개키(Public Key)`라고 한다.

## 복호화 키
수신자가 복호화를 위해 사용하는 키. 비밀로 간직해야한다.
`개인키(Private Key)`라고 한다.

## 공개키를 이용한 통신방식
B는 공개키와 개인키를 만들고, 공개키를 공개시켜논다.   
A가 B에게 자료를 전달하려고 하면, A는 B의 공개키를 가져가서 암호화를 한다.  
A가 B에게 암호문을 전달하면, B는 자신의 개인키를 이용해 복호화를 한다. 

## 대칭암호의 문제점 해결
- 많은 키를 보관해야 한다.   
-> 자신의 개인키만 가지고 있고, 공개키는 찾아서 사용하면 된다. 
- 모르는 사람과의 신뢰성 있는 통신이 어렵다.    
-> 수신자의 공개키로 암호화를 하면 다른 사람이 풀 수 없으므로 신뢰성이 좋다. 
- 당사자들끼리 키를 나눠가지고 있어야한다.    
-> 개인키는 자신만이 가지고, 공개키는 공개시켜 놓으면 된다. 


# RSA
1978년 3명의 수학자가 발표한 공개키 암호 알고리즘으로서 현재까지도 사용중인 방법이다.  
디지털 서명에도 사용 가능하다.  

---

### RSA의 암호화 알고리즘
$$
암호문 = 평문^{E} mod N
$$

### RSA의 공개키
숫자 `E`와 `N`

---

### RSA의 복호화 알고리즘
$$
평문 = 암호문^{D} mod N
$$

### RSA의 개인키
숫자 `D`와 `N`   


`E`, `D`, `N`은 수식에 의해 만들어진다.

---

## 다른 공개키 암호
RSA가 가장 많이 보급되어 있는 공개 키 암호 알고리즘이다.  
이외에도 ElGamal, Rabin, 타원 곡선 등이 있다.

<br><br>

## 공개키 암호는 대칭 암호보다 기밀성이 높은가?

### 정보보호 3대 목표(CIA)
- 기밀성(Confidentiality)
허가받지 못한 사람은 함부로 정보를 보지 못하게 하는 성질이다.
- 무결성(Integrity)
통신을 수행하는 동안 데이터가 함부로 수정되지 않는 것이다.
- 가용성(Availability)
원하는 시점에 정보에 접근할 수 있도록 항상 서비스를 사용할 수 있도록 하는 것.

이 중 기밀성에 가장 많은 영향을 주는 것은 `키 길이`이다.

| 대칭키 암호 | 공개키 암호 |
| ------ | ------ |
| 128비트  | 2304비트 |
| 112비트  | 1792비트 |
| 80비트   | 768비트  |
| 64비트   | 512비트  |
| 56비트   | 384비트  |

키 길이에 따라 공개키 암호와 대칭 암호의 기밀성이 달라진다.   
> 참고로 공인인증서에는 2048비트의 RSA 방식이 사용되었다.

## 공개키 암호의 단점
#### 처리속도  
대칭 암호는 비트 연산을 하고, 하드웨어로 구현이 가능해 속도가 빠르다.  
공개키 암호는 제곱 계산과 mod계산을 해야한다.  
대칭 암호에 비해 처리 속도가 몇 백 배가 늦다.  

#### 공개키에 대한 검증  
중간자 공격(man-in-the-middle attack)이 가능하다.  
송신자는 자신이 입수한 공개키가 진짜 수신자의 공개키인지 확인할 수 없다.  
Mallory가 자신의 공개 키를 송신자에게 전달해 혼란을 줄 수 있다.  


